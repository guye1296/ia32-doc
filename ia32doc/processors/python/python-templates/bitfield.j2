from utils.bit_field import BitField

class {{ humps.pascalize(doc.short_name.lower()) }}(BitField):
    """{{ strip_description(doc.long_description) }}"""
    def __init__(self, value):
        super().__init__(value, size_in_bytes={{ doc.size // 8 }})

    _FIELDS = [
    {%- for field in doc.fields -%}
    "{{ field.short_name }}",
    {%- endfor -%}
    ]

    {% for field in doc.fields %}
    @property
    def {{ field.short_name }}(self):
        """
        {{ strip_description(field.short_description) }}
        {{ strip_description(field.long_description) }}
        """
        return self[{{ field.bit[0] }}:{{ field.bit[1] }}]

    @{{ field.short_name }}.setter
    def {{ field.short_name }}(self, value):
        self[{{ field.bit[0] }}:{{ field.bit[1] }}] = value
    {% endfor %}